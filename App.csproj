<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<TargetFramework>net6.0</TargetFramework>
		<LangVersion>preview</LangVersion>
		<EnableDefaultItems>false</EnableDefaultItems>
		<PublishTrimmed>true</PublishTrimmed>
		<TrimMode>link</TrimMode>
	</PropertyGroup>

	<!-- Options for 'final' dotnet publish where we consume pgo.mibc that we collected in a test run: -->
	<PropertyGroup Condition="$(CollectMibc) != 'true'">
		<PublishReadyToRun>true</PublishReadyToRun>
		
		<!-- it's important to turn on Composite mode to merge all R2R images together
                     so we won't lose the class probes info. -->
		<PublishReadyToRunComposite>true</PublishReadyToRunComposite>

		<!-- Quite a weird syntax for passing additional args to crossgen2
		     I hope we'll come up with something better than this in the future -->
		<PublishReadyToRunCrossgen2ExtraArgs>--inputbubble%3b--instruction-set:avx2%3b--compilebubblegenerics%3b--embed-pgo-data%3b--mibc%3a$(PgoData)</PublishReadyToRunCrossgen2ExtraArgs>
	</PropertyGroup>

	<ItemGroup>
		<Compile Include="App.cs" />
		<ProjectReference Include="MyLib\MyLib.csproj" />
	</ItemGroup>



	<!-- A task that executed after 'dotnet publish' to run & collect a static profile (pgo.mibc file) -->
	<Target Name="GenerateMIBC" AfterTargets="Publish" Condition="$(CollectMibc) == 'true'">

		<!-- Special envvars for collecting a static profile: we need to disable R2R, tier1, enable tracing, etc. -->
		<ItemGroup>
			<Env Include="DOTNET_ReadyToRun=0" /> <!-- Disable AOT -->
			<Env Include="DOTNET_TieredPGO=1" /> <!-- Enable instrumentation in tier0 -->
			<Env Include="DOTNET_TC_CallCounting=0" /> <!-- Never promote methods to tier1 -->
			<Env Include="DOTNET_TC_QuickJitForLoops=1" /> <!-- Don't bypass tier0 for methods with loops -->
			<Env Include="DOTNET_JitCollect64BitCounts=1" />
		</ItemGroup>

		<!-- Launch the instrumented build via dotnet-trace in order to save traces -->
		<Exec Command="dotnet trace collect --providers Microsoft-Windows-DotNETRuntime:0x1F000080018:5 -- dotnet $(ProjectName).dll" 
		      EnvironmentVariables="@(Env)" WorkingDirectory="$(PublishDir)" />

		<!-- Convert nettrace to mibc -->
		<Exec Command="dotnet-pgo create-mibc -t $(PublishDir)trace.nettrace -o $(MSBuildThisFileDirectory)/pgo.mibc" />
	</Target>
	
	<!-- Run app that was optimized with pgo.mibc profile: -->
	<Target Name="RunFinal" AfterTargets="Publish" Condition="$(CollectMibc) != 'true'">
		<Exec Command="dotnet $(ProjectName).dll" WorkingDirectory="$(PublishDir)" />
	</Target>
</Project>
